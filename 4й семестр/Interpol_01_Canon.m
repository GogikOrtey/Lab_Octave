# 1) Каноническический метод

clc
clear

n = 4 # Размер матрицы
x = [1 3 5 7]';
y = [4 3 9 4]';

# В данном примере мы взяли 4 значения из прогноза погоды
# Мы точно указали в программе значения температуры для:
# Сегодня, послезавтра, на 5й день, и на 7й день.

#{
  Вот прогноз на тот момент: (1 - сегодня, 2 - завтра, ...)
  1) 4°
  2) 4°
  3) 3°
  4) 7°
  5) 9°
  6) 6°
  7) 4°
#}

X= eye(n); # Инициализируем матрицу n x n

# Матрица Вондермонта - это матрица, получаемая из исходной. Её принцип:

#{
              |1 2 3|
  Например, A=|4 5 6|
              |7 8 9|
  Первый столбец возводится в нулевую степень, второй - в первую, и т.д.
                |1^0 2^1 3^2|   |1 2 9 |
  Получится, AV=|4^0 5^1 6^2| = |1 5 36|
                |7^0 8^1 9^2|   |1 8 81|
#}

# При больших данных очень сложно находить определитель у таких матриц,
# так как он стремится к нулю. Из-за этого, вычисление каноническим методом
# являются неэффективными, уже после 20й размерности.

# Задаём матрицу Вондермонта из исходной
for i=1:1:n
  for j=1:1:n
    X(i,j)=x(i)^(j-1);
  endfor;
endfor;

X

A=X^(-1)*y

x0=2; # мы ищем значение функции в этуй точке -> f(x0) = sum
sum=0;

for i=1:1:n
  sum=sum+A(i)*x0^(i-1);
endfor;

sum # Ответ выводим тут

# Если вы указали значение переменной x0=2, то в ответе
# выведется вычисленное этим методом значение прогноза погоды
# на завтра (да, оно не совпадает с прогнозом погоды который я привёл, но уж что поделать)

